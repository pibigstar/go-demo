!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
APIClient	weibo.go	/^type APIClient struct {$/;"	d
APIError	weibo.go	/^type APIError struct {$/;"	d
Comment	fileds.go	/^type Comment struct {$/;"	d
Comments	fileds.go	/^type Comments struct {$/;"	d
Error	weibo.go	/^func (err *APIError) Error() string {$/;"	d
FriendsIDS	fileds.go	/^type FriendsIDS struct {$/;"	d
Friendships	fileds.go	/^type Friendships struct {$/;"	d
GET_comments_by_me	comments.go	/^func (api *APIClient) GET_comments_by_me(params map[string]interface{}, result *Comments) error {$/;"	d
GET_comments_mentions	comments.go	/^func (api *APIClient) GET_comments_mentions(params map[string]interface{}, result *Comments) error {$/;"	d
GET_comments_show	comments.go	/^func (api *APIClient) GET_comments_show(params map[string]interface{}, result *Comments) error {$/;"	d
GET_comments_show_batch	comments.go	/^func (api *APIClient) GET_comments_show_batch(params map[string]interface{}, result *Comments) error {$/;"	d
GET_comments_timeline	comments.go	/^func (api *APIClient) GET_comments_timeline(params map[string]interface{}, result *Comments) error {$/;"	d
GET_comments_to_me	comments.go	/^func (api *APIClient) GET_comments_to_me(params map[string]interface{}, result *Comments) error {$/;"	d
GET_friendships_followers	friendships.go	/^func (api *APIClient) GET_friendships_followers(params map[string]interface{}, result *Friendships) error {$/;"	d
GET_friendships_followers_active	friendships.go	/^func (api *APIClient) GET_friendships_followers_active(params map[string]interface{}, result *[]User) error {$/;"	d
GET_friendships_followers_ids	friendships.go	/^func (api *APIClient) GET_friendships_followers_ids(params map[string]interface{}, result *FriendsIDS) error {$/;"	d
GET_friendships_friends	friendships.go	/^func (api *APIClient) GET_friendships_friends(params map[string]interface{}, result *Friendships) error {$/;"	d
GET_friendships_friends_bilateral	friendships.go	/^func (api *APIClient) GET_friendships_friends_bilateral(params map[string]interface{}, result *Friendships) error {$/;"	d
GET_friendships_friends_bilateral_ids	friendships.go	/^func (api *APIClient) GET_friendships_friends_bilateral_ids(params map[string]interface{}, result *FriendsIDS) error {$/;"	d
GET_friendships_friends_chain_followers	friendships.go	/^func (api *APIClient) GET_friendships_friends_chain_followers(params map[string]interface{}, result *Friendships) error {$/;"	d
GET_friendships_friends_ids	friendships.go	/^func (api *APIClient) GET_friendships_friends_ids(params map[string]interface{}, result *FriendsIDS) error {$/;"	d
GET_friendships_friends_in_common	friendships.go	/^func (api *APIClient) GET_friendships_friends_in_common(params map[string]interface{}, result *Friendships) error {$/;"	d
GET_friendships_friends_remark_batch	friendships.go	/^func (api *APIClient) GET_friendships_friends_remark_batch(params map[string]interface{}, result interface{}) error {$/;"	d
GET_friendships_show	friendships.go	/^func (api *APIClient) GET_friendships_show(params map[string]interface{}, result interface{}) error {$/;"	d
GET_statuses_bilateral_timeline	statuses.go	/^func (api *APIClient) GET_statuses_bilateral_timeline(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_count	statuses.go	/^func (api *APIClient) GET_statuses_count(params map[string]interface{}, result *[]StatusCount) error {$/;"	d
GET_statuses_friends_timeline	statuses.go	/^func (api *APIClient) GET_statuses_friends_timeline(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_friends_timeline_ids	statuses.go	/^func (api *APIClient) GET_statuses_friends_timeline_ids(params map[string]interface{}, result *TimelineIDs) error {$/;"	d
GET_statuses_home_timeline	statuses.go	/^func (api *APIClient) GET_statuses_home_timeline(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_mentions	statuses.go	/^func (api *APIClient) GET_statuses_mentions(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_mentions_ids	statuses.go	/^func (api *APIClient) GET_statuses_mentions_ids(params map[string]interface{}, result *TimelineIDs) error {$/;"	d
GET_statuses_public_timeline	statuses.go	/^func (api *APIClient) GET_statuses_public_timeline(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_queryid	statuses.go	/^func (api *APIClient) GET_statuses_queryid(params map[string]interface{}, id *string) error {$/;"	d
GET_statuses_querymid	statuses.go	/^func (api *APIClient) GET_statuses_querymid(params map[string]interface{}, mid *string) error {$/;"	d
GET_statuses_repost_by_me	statuses.go	/^func (api *APIClient) GET_statuses_repost_by_me(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_repost_timeline	statuses.go	/^func (api *APIClient) GET_statuses_repost_timeline(params map[string]interface{}, result *Reposts) error {$/;"	d
GET_statuses_repost_timeline_ids	statuses.go	/^func (api *APIClient) GET_statuses_repost_timeline_ids(params map[string]interface{}, result *TimelineIDs) error {$/;"	d
GET_statuses_show	statuses.go	/^func (api *APIClient) GET_statuses_show(params map[string]interface{}, result *Status) error {$/;"	d
GET_statuses_show_batch	statuses.go	/^func (api *APIClient) GET_statuses_show_batch(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_timeline_batch	statuses.go	/^func (api *APIClient) GET_statuses_timeline_batch(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_to_me	statuses.go	/^func (api *APIClient) GET_statuses_to_me(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_to_me_ids	statuses.go	/^func (api *APIClient) GET_statuses_to_me_ids(params map[string]interface{}, result *TimelineIDs) error {$/;"	d
GET_statuses_user_timeline	statuses.go	/^func (api *APIClient) GET_statuses_user_timeline(params map[string]interface{}, result *Statuses) error {$/;"	d
GET_statuses_user_timeline_ids	statuses.go	/^func (api *APIClient) GET_statuses_user_timeline_ids(params map[string]interface{}, result *TimelineIDs) error {$/;"	d
GET_users_counts	users.go	/^func (api *APIClient) GET_users_counts(params map[string]interface{}, result *[]UserCounts) error {$/;"	d
GET_users_domain_show	users.go	/^func (api *APIClient) GET_users_domain_show(params map[string]interface{}, result *User) error {$/;"	d
GET_users_show	users.go	/^func (api *APIClient) GET_users_show(params map[string]interface{}, result *User) error {$/;"	d
GET_users_show_rank	users.go	/^func (api *APIClient) GET_users_show_rank(params map[string]interface{}, result *UserRank) error {$/;"	d
GetAuthorizeUrl	weibo.go	/^func (api *APIClient) GetAuthorizeUrl(params map[string]interface{}) (authorize_url string, err error) {$/;"	d
HTTP_METHOD	weibo.go	/^	var HTTP_METHOD string$/;"	d
HttpObject	weibo.go	/^type HttpObject struct {$/;"	d
JSONParser	utils.go	/^func JSONParser(body string, result interface{}) (err error) {$/;"	d
NewAPIClient	weibo.go	/^func NewAPIClient(app_key, app_secret, redirect_uri, response_type string) *APIClient {$/;"	d
POST_comments_create	comments.go	/^func (api *APIClient) POST_comments_create(params map[string]interface{}, result *Comment) error {$/;"	d
POST_comments_destroy	comments.go	/^func (api *APIClient) POST_comments_destroy(params map[string]interface{}, result *Comment) error {$/;"	d
POST_comments_destroy_batch	comments.go	/^func (api *APIClient) POST_comments_destroy_batch(params map[string]interface{}, result *[]Comment) error {$/;"	d
POST_comments_reply	comments.go	/^func (api *APIClient) POST_comments_reply(params map[string]interface{}, result *Comment) error {$/;"	d
POST_friendships_create	friendships.go	/^func (api *APIClient) POST_friendships_create(params map[string]interface{}, result *User) error {$/;"	d
POST_friendships_destroy	friendships.go	/^func (api *APIClient) POST_friendships_destroy(params map[string]interface{}, result *User) error {$/;"	d
POST_friendships_followers_destroy	friendships.go	/^func (api *APIClient) POST_friendships_followers_destroy(params map[string]interface{}, result *User) error {$/;"	d
POST_friendships_remark_update	friendships.go	/^func (api *APIClient) POST_friendships_remark_update(params map[string]interface{}, result *User) error {$/;"	d
POST_statuses_destroy	statuses.go	/^func (api *APIClient) POST_statuses_destroy(params map[string]interface{}, result *Status) error {$/;"	d
POST_statuses_filter_create	statuses.go	/^func (api *APIClient) POST_statuses_filter_create(params map[string]interface{}, result *Status) error {$/;"	d
POST_statuses_mentions_shield	statuses.go	/^func (api *APIClient) POST_statuses_mentions_shield(params map[string]interface{}, result interface{}) error {$/;"	d
POST_statuses_repost	statuses.go	/^func (api *APIClient) POST_statuses_repost(params map[string]interface{}, result *Status) error {$/;"	d
POST_statuses_update	statuses.go	/^func (api *APIClient) POST_statuses_update(params map[string]interface{}, result *Status) error {$/;"	d
POST_statuses_upload	statuses.go	/^func (api *APIClient) POST_statuses_upload(params map[string]interface{}, result *Status) error {$/;"	d
POST_statuses_upload_url_text	statuses.go	/^func (api *APIClient) POST_statuses_upload_url_text(params map[string]interface{}, result *Status) error {$/;"	d
Reposts	fileds.go	/^type Reposts struct {$/;"	d
RequestAccessToken	weibo.go	/^func (api *APIClient) RequestAccessToken(code string, result map[string]interface{}) error {$/;"	d
SetAccessToken	weibo.go	/^func (api *APIClient) SetAccessToken(access_token string, expires int64) *APIClient {$/;"	d
Status	fileds.go	/^type Status struct {$/;"	d
StatusCount	fileds.go	/^type StatusCount struct {$/;"	d
Statuses	fileds.go	/^type Statuses struct {$/;"	d
TestHttpCallGet	weibo_test.go	/^\/\/ func TestHttpCallGet(t *testing.T) {$/;"	d
TestHttpCallPost	weibo_test.go	/^\/\/ func TestHttpCallPost(t *testing.T) {$/;"	d
TestHttpCallRequestToken	weibo_test.go	/^func TestHttpCallRequestToken(t *testing.T) {$/;"	d
TestHttpCallUpload	weibo_test.go	/^\/\/ func TestHttpCallUpload(t *testing.T) {$/;"	d
Test_GET_comments_show	comments_test.go	/^\/\/ func Test_GET_comments_show(t *testing.T) {$/;"	d
Test_GET_statuses_home_timeline	statuses_test.go	/^\/\/ func Test_GET_statuses_home_timeline(t *testing.T) {$/;"	d
Test_GET_statuses_repost_timeline	statuses_test.go	/^\/\/ func Test_GET_statuses_repost_timeline(t *testing.T) {$/;"	d
Test_GET_statuses_user_timeline	statuses_test.go	/^func Test_GET_statuses_user_timeline(t *testing.T) {$/;"	d
Test_GET_users_counts	friendships_test.go	/^\/\/ func Test_GET_users_counts(t *testing.T) {$/;"	d
Test_GET_users_counts	users_test.go	/^\/\/ func Test_GET_users_counts(t *testing.T) {$/;"	d
Test_GET_users_show	friendships_test.go	/^\/\/ func Test_GET_users_show(t *testing.T) {$/;"	d
Test_GET_users_show	users_test.go	/^\/\/ func Test_GET_users_show(t *testing.T) {$/;"	d
Test_POST_comments_create	comments_test.go	/^\/\/ func Test_POST_comments_create(t *testing.T) {$/;"	d
Test_POST_statuses_repost	statuses_test.go	/^\/\/ func Test_POST_statuses_repost(t *testing.T) {$/;"	d
TimelineIDs	fileds.go	/^type TimelineIDs struct {$/;"	d
Times	statuses_test.go	/^type Times struct {$/;"	d
User	fileds.go	/^type User struct {$/;"	d
UserCounts	fileds.go	/^type UserCounts struct {$/;"	d
UserRank	fileds.go	/^type UserRank struct {$/;"	d
api	comments_test.go	/^\/\/ var api *APIClient$/;"	d
api	friendships_test.go	/^\/\/ var api *APIClient$/;"	d
api	statuses_test.go	/^var api *APIClient$/;"	d
api	users_test.go	/^\/\/ var api *APIClient$/;"	d
api	weibo.go	/^	var api = &APIClient{$/;"	d
body	weibo.go	/^	var body string$/;"	d
call	weibo.go	/^func (http *HttpObject) call(uri string, params map[string]interface{}, result interface{}) (err error) {$/;"	d
checkError	weibo.go	/^func checkError(err error) {$/;"	d
content_type	weibo.go	/^	var content_type string$/;"	d
contents	weibo.go	/^	var contents []byte$/;"	d
debugCheckError	utils.go	/^func debugCheckError(err error) {$/;"	d
debugPrintln	utils.go	/^func debugPrintln(message ...interface{}) {$/;"	d
debugTypeof	utils.go	/^func debugTypeof(element interface{}) interface{} {$/;"	d
encodeMultipart	weibo.go	/^func encodeMultipart(params map[string]interface{}) (multipartContentType string, multipartData *bytes.Buffer, err error) {$/;"	d
encodeParams	weibo.go	/^func encodeParams(params map[string]interface{}) (result string, err error) {$/;"	d
encode_params	weibo.go	/^	var encode_params string$/;"	d
get_statuses_querymid	emotions.go	/^func (api *APIClient) get_statuses_querymid(params map[string]interface{}, result interface{}) error {$/;"	d
httpCall	weibo.go	/^func httpCall(the_url string, method int, authorization string, params map[string]interface{}) (body string, err error) {$/;"	d
http_body	weibo.go	/^	var http_body io.Reader$/;"	d
http_url	weibo.go	/^	var http_url string$/;"	d
init	comments_test.go	/^\/\/ func init() {$/;"	d
init	friendships_test.go	/^\/\/ func init() {$/;"	d
init	statuses_test.go	/^func init() {$/;"	d
init	users_test.go	/^\/\/ func init() {$/;"	d
int64	fileds.go	/^	Mbtype             int64   `json:"mbtype"`$/;"	d
int64	fileds.go	/^	Verified_type      int64   `json:"verified_type"`$/;"	d
is_expires	weibo.go	/^func (api *APIClient) is_expires() bool {$/;"	d
multipart_data	weibo.go	/^	var multipart_data *bytes.Buffer \/\/For Upload Image$/;"	d
params	weibo.go	/^	var params = map[string]interface{}{$/;"	d
picdata	weibo.go	/^				var picdata io.Writer$/;"	d
read_body	weibo.go	/^func read_body(response *http.Response) (body string, err error) {$/;"	d
reader	weibo.go	/^	var reader io.ReadCloser$/;"	d
request	weibo.go	/^	var request *http.Request$/;"	d
result	statuses_test.go	/^	var result string$/;"	d
result	weibo_test.go	/^\/\/ 	\/\/ var result map[string]interface{}$/;"	d
string	weibo.go	/^	response_type string$/;"	d
string	weibo.go	/^	var content_type string$/;"	d
string	weibo.go	/^func NewAPIClient(app_key, app_secret, redirect_uri, response_type string) *APIClient {$/;"	d
the_url	weibo.go	/^	var the_url string = fmt.Sprintf("%s%s", api.auth_url, "access_token")$/;"	d
url	weibo.go	/^	var url = fmt.Sprintf("%s%s.json", http.client.api_url, uri)$/;"	d
url_params	weibo.go	/^	var url_params = map[string]interface{}{$/;"	d
url_params	weibo.go	/^	var url_params string$/;"	d
